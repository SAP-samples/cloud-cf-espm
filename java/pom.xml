<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sap.refapps</groupId>
	<artifactId>java</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>java</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>com.sap.refapps</groupId>
		<artifactId>espm</artifactId>
		<version>2.0.0</version>
	</parent>	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Properties that hold the local server information required for local 
			integration testing -->
		<local.server.root>${project.build.directory}/server</local.server.root>
		<local.server.host>localhost</local.server.host>
		<local.server.proxy.settings>--http-proxy-host proxy --http-proxy-port
			8080 --https-proxy-host proxy --https-proxy-port 8080</local.server.proxy.settings>
		<browser.proxy.settings>-Dhttp.proxyHost=proxy -Dhttp.proxyPort=8080
			-Dhttps.proxyHost=proxy -Dhttps.proxyPort=8080</browser.proxy.settings>
		<sap.cloud.sdk.version>3.125.9</sap.cloud.sdk.version>
		<sap.cloud.sdk.path>${project.build.directory}/install</sap.cloud.sdk.path>
		<!-- Property that holds the source path to the backend destinations -->
		<destinations.path>${basedir}/../destinations</destinations.path>
		<m2e.jaxrs.activation>false</m2e.jaxrs.activation>
		<local.server.jmx.port>9010</local.server.jmx.port>
		<local.server.http.port>8080</local.server.http.port>
		<local.server.https.port>8443</local.server.https.port>
		<local.server.ajp.port>8009</local.server.ajp.port>
		<olingo.version>2.0.11</olingo.version>
		<slf4j.version>1.7.30</slf4j.version>
		<junit.version>4.13.2</junit.version>
		<derby.version>10.14.2.0</derby.version>
		<eclipselink.version>2.7.8</eclipselink.version>
		<javax.servlet-api.version>4.0.1</javax.servlet-api.version>
		<httpclient.version>4.5.13</httpclient.version>
		<httpcore.version>4.4.14</httpcore.version>
		<cxf-rt-frontend-jaxrs.version>3.2.14</cxf-rt-frontend-jaxrs.version>

		<jackson-databind.version>2.12.6.1</jackson-databind.version>
		<ngdbc.version>2.12.7</ngdbc.version>
		<postgresql.version>42.3.7</postgresql.version>
		<commons-dbcp2.version>2.8.0</commons-dbcp2.version>
		<jettison.version>1.4.1</jettison.version>
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-war-plugin.version>3.0.0</maven-war-plugin.version>
		<maven-dependency-plugin.version>3.0.0</maven-dependency-plugin.version>
		<build-helper-maven-plugin.version>1.12</build-helper-maven-plugin.version>
		<maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
		<maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<build-helper-maven-plugin.version>1.12</build-helper-maven-plugin.version>
		<!-- Code Quality Tools Versions -->
		<maven-pmd-plugin.version>3.7</maven-pmd-plugin.version>
		<maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
		<findbugs-maven-plugin.version>3.0.4</findbugs-maven-plugin.version>
		<cloud-security-xsuaa.version>2.8.8</cloud-security-xsuaa.version>
	</properties>


	<modules>
		<module>espm-cloud-jpa</module>
		<module>espm-cloud-web</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- Logging dependencies -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- JPA Persistence Dependencies -->
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>${eclipselink.version}</version>
			</dependency>
			<!-- JEE Dependencies -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>${httpcore.version}</version>
				<scope>compile</scope>
			</dependency>
			<!-- OData Dependencies -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf-rt-frontend-jaxrs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-api</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-core</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-jpa-processor-api</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-api-annotation</artifactId>
				<version>${olingo.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.olingo</groupId>
				<artifactId>olingo-odata2-jpa-processor-core</artifactId>
				<version>${olingo.version}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sap.db.jdbc</groupId>
				<artifactId>ngdbc</artifactId>
				<version>${ngdbc.version}</version>
			</dependency>
			<dependency>
               <groupId>org.postgresql</groupId>
	           <artifactId>postgresql</artifactId>
	           <version>${postgresql.version}</version>
             </dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>${commons-dbcp2.version}</version>
			</dependency>

			
			<dependency>
				<groupId>com.sap.cloud.security.xsuaa</groupId>
				<artifactId>api</artifactId>
				<version>${cloud-security-xsuaa.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${derby.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jettison</groupId>
				<artifactId>jettison</artifactId>
				<version>${jettison.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version> <!-- prevent Maven warning -->
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>[${maven-dependency-plugin.version},)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>[${build-helper-maven-plugin.version},)</versionRange>
										<goals>
											<goal>reserve-network-port</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Static Code Quality Plugins -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
					<configuration>
						<rulesets>
							<ruleset>rules/pmd/pmdRuleset.xml</ruleset>
						</rulesets>
						<skipEmptyReport>false</skipEmptyReport>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sap.refapps</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<configuration>
						<outputFileFormat>xml</outputFileFormat>
						<consoleOutput>false</consoleOutput>
						<enableRSS>false</enableRSS>
						<linkXRef>false</linkXRef>
						<configLocation>rules/checkstyle/checkstyleChecks.xml</configLocation>
						<sourceDirectory>${basedir}/src</sourceDirectory>
						<encoding>${project.build.sourceEncoding}</encoding>
						<failOnViolation>true</failOnViolation>
						<violationSeverity>error</violationSeverity>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sap.refapps</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs-maven-plugin.version}</version>
					<configuration>
						<includeFilterFile>rules/findbugs/findbugsRules.xml</includeFilterFile>
						<findbugsXmlOutput>true</findbugsXmlOutput>
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
						<xmlOutput>true</xmlOutput>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sap.refapps</groupId>
							<artifactId>build-tools</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- The profile "hcp" is activated by default, this assumes CMIS dependencies 
			need to be present on class path of the deployment environment. USE THIS 
			PROFILE IF YOU PLAN TO DEPLOY ON HANA CLOUD PLATFORM (HCP) -->
		<profile>
			<id>hcp</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Static Code Quality Plugins -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>pmd</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>checkstyle</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>findbugs</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
